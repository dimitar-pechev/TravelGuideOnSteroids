@model TravelGuide.Areas.Blog.ViewModels.GalleryListViewModel

@{
    ViewBag.Title = "Gallery";
}

<div class="row gallery-cover-container">
    <img src="~/App_Themes/Blog/gallery-cover.png" alt="gallery-cover" class="img-responsive" />
</div>
<div class="container gallery-container">
    <div class="row container-row">
        <div class="row text-right options-gallery">
            <div class="col-md-4 col-md-offset-4 text-center">
                @using (Ajax.BeginForm("Search", null,
            new AjaxOptions
            {
                UpdateTargetId = "gallery-items-container",
                InsertionMode = InsertionMode.Replace,
                HttpMethod = "POST",
                OnBegin = "clearTooltips",
                OnSuccess = "reloadToolTips"
            }, new { id = "searchForm" }))
                {
                    @Html.Label("Search by photo title/related destination:", new { @for = "query", @class = "search-label-discover" })
                    @Html.TextBox("query", null, new { oninput = "changed()" })
                    <input type="submit" oninput="onInput()" style="display: none" />
                }
            </div>
            <div class="col-md-4">
                @Html.ActionLink("Add new Photo", "Create", null, new { @class = "btn btn-success btn-options-menu" })
            </div>
        </div>
        <div id="gallery-items-container">
            @Html.Partial("_GalleryListPartial", Model)
        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")
    @Scripts.Render("~/bundles/toastr")
    <script>
        $(document).ready(function () {
            $('.tooltipped').tooltip({ delay: 50 });
        });

        function clearTooltips() {
            $('.tooltipped').tooltip('remove');
        }

        function reloadToolTips() {
            $('.tooltipped').tooltip({ delay: 50 });

            $('.btn-add-comment').on('click', () => {
                $('.comment-box-textarea').focus();
            })
        }

        function deleteComment(args) {
            notify('success', 'Comment deleted!');

            var selector = $(args).attr('data-target');
            var commentsCount = $('#' + selector).html();
            $('#' + selector).html(+commentsCount - 1);
        }

        function changed() {
            $('#searchForm').submit();
        }

        function likeImage(args) {
            $('.btn-like-image').addClass('disabled');

            var selector = $(args).attr('data-target');
            var likesCount = $('#' + selector).html();
            $('#' + selector).html(+likesCount + 1);

            notify('success', 'Image liked!');

            setTimeout(() => {
                $('.btn-like-image').removeClass('disabled');
            }, 2000);
        }

        function unlikeImage(args) {
            $('.btn-like-image').addClass('disabled');

            var selector = $(args).attr('data-target');
            var likesCount = $('#' + selector).html();
            $('#' + selector).html(+likesCount - 1);

            notify('success', 'Like removed!');

            setTimeout(() => {
                $('.btn-like-image').removeClass('disabled');
            }, 2000);
        }

        $('.btn-add-comment').on('click', () => {
            $('.comment-box-textarea').focus();
        })

        function submitComment(args) {
            $('.comment-box-textarea').val('');
            notify('success', 'Your comment has been submitted!')

            var selector = $(args).attr('data-target');
            var commentsCount = $('#' + selector).html();
            $('#' + selector).html(+commentsCount + 1);
        }

        function populateModal(selector) {
            console.log($('#' + selector));
            $('#' + selector).submit();
        }
    </script>
}