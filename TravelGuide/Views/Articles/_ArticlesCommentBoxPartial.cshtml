@model TravelGuide.ViewModels.ArticlesViewModels.ArticleDetailsViewModel

@if (Model.Comments == null || Model.Comments.Count == 0)
{
    if (this.User.Identity.IsAuthenticated)
    {
        <div class="row">
            <p class="text-center">Be the first to comment...</p>
        </div>
    }
    else
    {
        <div class="row">
            <p class="text-center">No comments yet...</p>
        </div>
    }
    <hr />
}
else
{
    foreach (var comment in Model.Comments)
    {
        <div class="card card-comment container-fluid comment-box-details">
            <div class="col-md-1 details-profile-pic-comment">
                <img src="https://cdn2.iconfinder.com/data/icons/circle-icons-1/64/profle-256.png" alt="profile-pic" class="img-responsive profile-pic-comment" />
            </div>
            <div class="col-md-11 comment-content">
                <span class="username-panel">@comment.User.UserName</span><span class="date-panel"> @comment.CreatedOn</span>
                @if (this.User.IsInRole("admin") || (this.User.Identity.IsAuthenticated && Model.CurrentUser.Id == comment.UserId))
                {
                    using (Ajax.BeginForm("DeleteComment", new { commentId = comment.Id, articleId = Model.Id },
                             new AjaxOptions()
                             {
                                 InsertionMode = InsertionMode.Replace,
                                 UpdateTargetId = "comment-box",
                                 HttpMethod = "DELETE",
                                 Confirm = "Are you sure you want to delete this comment?",
                                 OnSuccess = "commentDeleted"
                             }, new { @class = "form-delete-comment" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="submit" value="Delete" class="btn-delete" />
                    }
                }
                <p>@comment.Content</p>
            </div>
        </div>
    }
}

@if (this.User.Identity.IsAuthenticated)
{
    <div class="card card-comment container-fluid">
        <div class="col-md-1 details-profile-pic-comment">
            <img src="https://cdn2.iconfinder.com/data/icons/circle-icons-1/64/profle-256.png" alt="profile-pic" class="img-responsive  profile-pic-comment" />
        </div>
        <div class="col-md-11">
            @using (Ajax.BeginForm("Comment", new { storyId = Model.Id },
                        new AjaxOptions()
                        {
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "comment-box",
                            HttpMethod = "POST",
                            OnSuccess = "commentSubmitted"
                        }))
            {
                @Html.AntiForgeryToken()
                <div class="row row-little-margin">
                    @Html.TextAreaFor(m => m.NewCommentContent, new { rows = 2, @class = "form-control comment-box-textarea", placeholder = "Type your comment here..." })
                    @Html.ValidationMessageFor(m => m.NewCommentContent, "", new { @class = "text-danger" })
                </div>
                <div class="row text-right row-little-margin btn-submit-box" id="btn-submit-comment">
                    <input type="submit" value="Submit" class="btn-sm-for-real" />
                </div>
            }
        </div>
    </div>
}